diff --git a/conf/graphite.wsgi.example b/conf/graphite.wsgi.example
index 47eed03..7e6c4b7 100755
--- a/conf/graphite.wsgi.example
+++ b/conf/graphite.wsgi.example
@@ -1,6 +1,6 @@
 import os
 import sys
-sys.path.append('/opt/graphite/webapp')
+sys.path.append('@GENTOO_PORTAGE_EPREFIX@/usr/share/graphite-web/webapp')
 
 try:
     from importlib import import_module
diff --git a/examples/example-graphite-vhost.conf b/examples/example-graphite-vhost.conf
index 6514fa4..1280316 100644
--- a/examples/example-graphite-vhost.conf
+++ b/examples/example-graphite-vhost.conf
@@ -21,20 +21,20 @@ WSGISocketPrefix run/wsgi
 
 <VirtualHost *:80>
         ServerName graphite
-        DocumentRoot "/opt/graphite/webapp"
-        ErrorLog /opt/graphite/storage/log/webapp/error.log
-        CustomLog /opt/graphite/storage/log/webapp/access.log common
+        DocumentRoot "@GENTOO_PORTAGE_EPREFIX@/usr/share/graphite-web/webapp"
+        ErrorLog /var/log/apache2/graphite-web/webapp/error.log
+        CustomLog /var/log/apache2/graphite-web/webapp/access.log common
 
         # I've found that an equal number of processes & threads tends
         # to show the best performance for Graphite (ymmv).
         WSGIDaemonProcess graphite processes=5 threads=5 display-name='%{GROUP}' inactivity-timeout=120
         WSGIProcessGroup graphite
         WSGIApplicationGroup %{GLOBAL}
-        WSGIImportScript /opt/graphite/conf/graphite.wsgi process-group=graphite application-group=%{GLOBAL}
+        WSGIImportScript @GENTOO_PORTAGE_EPREFIX@/etc/graphite-web/graphite.wsgi process-group=graphite application-group=%{GLOBAL}
 
         # XXX You will need to create this file! There is a graphite.wsgi.example
         # file in this directory that you can safely use, just copy it to graphite.wgsi
-        WSGIScriptAlias / /opt/graphite/conf/graphite.wsgi 
+        WSGIScriptAlias / @GENTOO_PORTAGE_EPREFIX@/etc/graphite-web/graphite.wsgi
 
         # XXX To serve static files, either:
         # django-admin.py collectstatic --noinput --settings=graphite.settings
@@ -43,7 +43,7 @@ WSGISocketPrefix run/wsgi
         # * Collect static files in a directory by running:
         #     django-admin.py collectstatic --noinput --settings=graphite.settings
         #   And set an alias to serve static files with Apache:
-        Alias /content/ /opt/graphite/webapp/content/
+        Alias /content/ @GENTOO_PORTAGE_EPREFIX@/usr/share/graphite-web/webapp/content/
         <Location "/content/">
                 SetHandler None
         </Location>
@@ -59,9 +59,9 @@ WSGISocketPrefix run/wsgi
 
         # The graphite.wsgi file has to be accessible by apache. It won't
         # be visible to clients because of the DocumentRoot though.
-        <Directory /opt/graphite/conf/>
+        <Directory @GENTOO_PORTAGE_EPREFIX@/etc/graphite-web/>
                 Order deny,allow
                 Allow from all
         </Directory>
 
-</VirtualHost>
\ No newline at end of file
+</VirtualHost>
diff --git a/setup.py b/setup.py
index 676eb96..90585d0 100644
--- a/setup.py
+++ b/setup.py
@@ -86,8 +86,7 @@ try:
       ],
       package_data={'graphite' :
         ['templates/*', 'local_settings.py.example']},
-      scripts=glob('bin/*'),
-      data_files=webapp_content.items() + storage_dirs + conf_files + examples,
+      data_files=webapp_content.items(),
       **setup_kwargs
     )
 finally:
diff --git a/webapp/graphite/local_settings.py.example b/webapp/graphite/local_settings.py.example
index 7d27e34..6083b7b 100644
--- a/webapp/graphite/local_settings.py.example
+++ b/webapp/graphite/local_settings.py.example
@@ -54,30 +54,29 @@
 #####################################
 # Change only GRAPHITE_ROOT if your install is merely shifted from /opt/graphite
 # to somewhere else
-#GRAPHITE_ROOT = '/opt/graphite'
+GRAPHITE_ROOT = '@GENTOO_PORTAGE_EPREFIX@/usr/share/graphite-web'
 
 # Most installs done outside of a separate tree such as /opt/graphite will only
 # need to change these three settings. Note that the default settings for each
 # of these is relative to GRAPHITE_ROOT
-#CONF_DIR = '/opt/graphite/conf'
-#STORAGE_DIR = '/opt/graphite/storage'
-#CONTENT_DIR = '/opt/graphite/webapp/content'
+CONF_DIR = '@GENTOO_PORTAGE_EPREFIX@/etc/graphite-web'
+STORAGE_DIR = '@GENTOO_PORTAGE_EPREFIX@/var/lib/carbon'
+CONTENT_DIR = '@GENTOO_PORTAGE_EPREFIX@/usr/share/graphite-web/webapp/content'
 
 # To further or fully customize the paths, modify the following. Note that the
 # default settings for each of these are relative to CONF_DIR and STORAGE_DIR
 #
 ## Webapp config files
-#DASHBOARD_CONF = '/opt/graphite/conf/dashboard.conf'
-#GRAPHTEMPLATES_CONF = '/opt/graphite/conf/graphTemplates.conf'
+DASHBOARD_CONF = '@GENTOO_PORTAGE_EPREFIX@/etc/graphite-web/dashboard.conf'
+GRAPHTEMPLATES_CONF = '@GENTOO_PORTAGE_EPREFIX@/etc/graphite-web/graphTemplates.conf'
 
 ## Data directories
 # NOTE: If any directory is unreadable in DATA_DIRS it will break metric browsing
-#WHISPER_DIR = '/opt/graphite/storage/whisper'
-#RRD_DIR = '/opt/graphite/storage/rrd'
-#DATA_DIRS = [WHISPER_DIR, RRD_DIR] # Default: set from the above variables
-#LOG_DIR = '/opt/graphite/storage/log/webapp'
-#INDEX_FILE = '/opt/graphite/storage/index'  # Search index file
-
+WHISPER_DIR = '@GENTOO_PORTAGE_EPREFIX@/var/lib/carbon/whisper'
+RRD_DIR = '@GENTOO_PORTAGE_EPREFIX@/var/lib/carbon/rrd'
+DATA_DIRS = [WHISPER_DIR, RRD_DIR] # Default: set from the above variables
+LOG_DIR = '@GENTOO_PORTAGE_EPREFIX@/var/log/graphite-web/'
+INDEX_FILE = '@GENTOO_PORTAGE_EPREFIX@/var/lib/graphite-web/index'  # Search index file
 
 #####################################
 # Email Configuration #
diff --git a/webapp/graphite/manage.py b/webapp/graphite/manage.py
index f4c3266..10fe957 100755
--- a/webapp/graphite/manage.py
+++ b/webapp/graphite/manage.py
@@ -6,7 +6,7 @@ from django.core.management import execute_from_command_line
 
 
 if __name__ == "__main__":
-    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "settings")
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "graphite.settings")
 
     from django.core.management import execute_from_command_line
 
